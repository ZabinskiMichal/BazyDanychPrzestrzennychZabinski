--dodanie fukcjonalnosci postgisa do bazy danych
CREATE EXTENSION POSTGIS


--CREATE SCHEMA zad1

--id, geometria, nazwa, wysokosc

CREATE TABLE zad1.budynki(
	id_budynku SERIAL PRIMARY KEY,
	geometria geometry NOT NULL,
	nazwa VARCHAR(50) NOT NULL,
	wysokosc FLOAT
	
);

--wprowadzenie danych do tabeli budyki(typ poligon)
INSERT INTO zad1.budynki VALUES (DEFAULT, ST_GEOMETRYFROMTEXT('POLYGON((3 8, 3 6, 5 6, 5 8, 3 8))'), 'Building C', 4);
INSERT INTO zad1.budynki VALUES (DEFAULT, ST_GEOMETRYFROMTEXT('POLYGON((4 7, 4 5, 6 5, 6 7, 4 7))'), 'Building B', 4);
INSERT INTO zad1.budynki VALUES (DEFAULT, ST_GEOMETRYFROMTEXT('POLYGON((9 9 , 9 8, 10 8, 10 9, 9 9))'), 'Building D', 4);
INSERT INTO zad1.budynki VALUES (DEFAULT, ST_GEOMETRYFROMTEXT('POLYGON((8 4, 8 1.5, 10.5 1.5, 10.5 4, 8 4))'), 'Building A', 4);
INSERT INTO zad1.budynki VALUES (DEFAULT, ST_GEOMETRYFROMTEXT('POLYGON((1 2, 1 1, 2 1, 2 2, 1 2))'), 'Building F', 4);


--id, geometria, nazwa

CREATE TABLE zad1.drogi(
	id_drogi SERIAL PRIMARY KEY,
	geometria GEOMETRY NOT NULL,
	nazwa VARCHAR(50) NOT NULL
);

--wprowadzenie danych do tabeli pktinfo
INSERT INTO zad1.drogi VALUES(DEFAULT, 'LINESTRING(0 4.5, 12 4.5)', 'road X')
INSERT INTO zad1.drogi VALUES(DEFAULT, 'LINESTRING(7.5 0, 7.5 10.5)', 'road Y')



--id,geometria,nazwa, liczprac
CREATE TABLE zad1.pktinfo(
	id_pktinfo SERIAL PRIMARY KEY,
	geometria GEOMETRY NOT NULL,
	nazwa VARCHAR(50) NOT NULL,
	liczprac INT
);

INSERT INTO zad1.pktinfo VALUES(DEFAULT, 'POINT(6 9.6)', 'K', 13);
INSERT INTO zad1.pktinfo VALUES(DEFAULT, 'POINT(6.5 6)', 'J', 13);
INSERT INTO zad1.pktinfo VALUES(DEFAULT, 'POINT(1 3.5)', 'G', 13);
INSERT INTO zad1.pktinfo VALUES(DEFAULT, 'POINT(1.5 1.5)', 'H', 13);
INSERT INTO zad1.pktinfo VALUES(DEFAULT, 'POINT(9.5 6)', 'I', 13);

--ok
--1 calkowita dlugosc drog
SELECT ST_Length(geometria) AS dlugoscDrogi FROM zad1.drogi
SELECT SUM(ST_LENGTH(geometria)) AS sumaDlugosciDrog FROM zad1.drogi

--ok
--zad2 - wypisac geometrie, pole i obwod building A

--typ geometrii
SELECT ST_ASTEXT(geometria) FROM zad1.budynki WHERE nazwa = 'Building A';
--pole
SELECT ST_AREA(geometria) FROM zad1.budynki WHERE nazwa = 'Building A';

--obwod
SELECT ST_PERIMETER(geometria) FROM zad1.budynki WHERE nazwa = 'Building A';

--ok
--zad3 - nazwy i pola powierzchni wszystkich poligonow w wartstwie budynnki, posortowac alfabetycznie
--domysle sortowanie jest ascending dla alfabetu
SELECT nazwa, ST_AREA(geometria) FROM zad1.budynki ORDER BY nazwa


--ok
--zad4 nazwy 2 bydykow o najwiekszej powierzhcni
SELECT ST_AREA(geometria) FROM zad1.budynki ORDER BY ST_AREA(geometria) DESC LIMIT 2


--ok
--5 --wyznacz najkrotksza odkeglosc pkt g a building C
SELECT geometria FROM zad1.budynki WHERE nazwa = 'Building C'
SELECT geometria FROM zad1.pktinfo WHERE nazwa = 'G'

--fukcja ST_Distance przyjmuje dwa argumenty
SELECT ST_Distance(zad1.budynki.geometria, zad1.pktinfo.geometria) FROM zad1.budynki, zad1.pktinfo WHERE budynki.nazwa = 'Building C' AND pktinfo.nazwa = 'G'

--ok
--zad6
--pole powierzchni budynku C ktora jest w dalej niz 0.5 od building B

--musimy za pomoca ST_Buffer utworzyc bufor wokol buildong C, o wartosci 0.5
--uzyc ST_difference by obliczyc rozznice pol
--ST_Area by obliczyc pole

SELECT ST_AREA(ST_Difference((SELECT geometria FROM zad1.budynki WHERE nazwa = 'Building C'), ST_Buffer(B.geometria, 0.5))) FROM zad1.budynki B WHERE B.nazwa = 'Building B'


--ST_Buffer(B.geometria, 0.5)

--ok
--zad7 - wyznacz budynku ktorych centroid znajduje sie powyzej drogi X
--wyznaczamy spolrzedna Y od road X i porownojuemy z centroidamy budynkow
SELECT * FROM zad1.budynki, zad1.drogi WHERE zad1.drogi.nazwa = 'road X' AND(ST_Y(ST_Centroid(zad1.budynki.geometria)) > ST_Y(ST_Centroid(zad1.drogi.geometria)))


--ok
--zad8 - oblicz pole powierzchni tych czesci budynu Building C i poligonu o wspolrzednych 4 7, 6 7, 6 8,  4 8, 4 7 ktore nie sa wspolne dla tych dwoch obiektow
--obliczymy pole powierzchni roznicy pol
--do obliczenia roznicy pol wykorzystamy ST_Sym_Difference
SELECT ST_Area(ST_SymDifference(zad1.budynki.geometria, ST_GeomFromText('POLYGON((4 7, 6 7, 6 8,  4 8, 4 7))'))) FROM zad1.budynki WHERE zad1.budynki.nazwa = 'Building C'











